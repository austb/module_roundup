#!/usr/bin/env ruby
require 'puppet_forge'
require 'trollop'

opts = Trollop::options do
  banner <<-EOS
Collect information about all modules released in a given date range.

Usage:
       roundup [options] start_date

Allowed date formats:
       YYYY-MM-DD

where [options] are all optional:
  EOS
  opt :output, "The name of the file that will be created in the report directory (default: the provided start date)",
    :short => "-o", :type => :string, :default => nil
  opt :enddate, "An end date (don't count modules published after this date.)", :type => :string, :default => "#{DateTime.now}"
end

if ARGV.empty?
  puts "ERROR: Please supply a date from which to collect modules"
  exit 1
end

collect_since = ARGV.shift
start_date = DateTime.parse collect_since
end_date = DateTime.parse opts[:enddate]

if opts[:output].nil?
  output_file = collect_since
else
  output_file = opts[:output]
end

PuppetForge.user_agent = "ModuleRoundup"

@puppetlabs_releases = PuppetForge::Release.where(owner: 'puppetlabs', sort_by: 'release_date', limit: 100)

recent = []

@puppetlabs_releases.unpaginated.each do |item|
  release_date = DateTime.parse item.created_at
  break if release_date < start_date

  recent << item unless release_date > end_date
end

File.open("#{File.dirname(__FILE__)}/reports/#{output_file}", 'w') do |file|
  recent.each do |r|
    entry = "#**#{r.slug}**\n\n"
    entry += "#{r.metadata[:summary]}\n\n"

    changelog_section = /(##[^\n]*#{r.version}.*?)(?:##[^\n]*\d\.\d\.\d|\Z)/m.match r.changelog
    if changelog_section.nil?
      changelog_section = /(##.*#{r.version}.*?)(?:##.*\d\.\d\.\d|\Z)/m.match r.changelog
    end

    entry += changelog_section[1] unless changelog_section.nil?

    file.write(entry + "\n\n")
  end
end

